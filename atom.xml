<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jerry Ding&#39;s Blog</title>
  <subtitle>上善若水</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jjding1986.github.io/"/>
  <updated>2016-04-08T05:54:16.000Z</updated>
  <id>https://jjding1986.github.io/</id>
  
  <author>
    <name>Jerry Ding</name>
    <email>jjding1986@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>集成React Native至现有Android应用问题总结</title>
    <link href="https://jjding1986.github.io/2016/04/08/reactNativeIntegratingProblems/"/>
    <id>https://jjding1986.github.io/2016/04/08/reactNativeIntegratingProblems/</id>
    <published>2016-04-08T05:47:46.000Z</published>
    <updated>2016-04-08T05:54:16.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;1-加入React-Native的dependency之后报：Attribute-“color”-has-already-been-defined&quot;&gt;&lt;a href=&quot;#1-加入React-Native的dependency之后报：Attribute-“color”-has-already-been-defined&quot; class=&quot;headerlink&quot; title=&quot;1.加入React Native的dependency之后报：Attribute “color” has already been defined&quot;&gt;&lt;/a&gt;1.加入React Native的dependency之后报：Attribute “color” has already been defined&lt;/h2&gt;&lt;p&gt;原因：React Native引入的support-v7中资源与自定义控件属性冲突。目前我们项目中有冲突的地方是Base模块下attrs.xml文件中定义的ColorSquare。 &lt;/p&gt;
&lt;p&gt;解决办法：修改自定义控件属性的name  &lt;/p&gt;
&lt;p&gt;参考：&lt;a href=&quot;http://stackoverflow.com/questions/33551324/android-migration-to-appcompat-v7-causes-error-attribute-color-has-already-be&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;stackoverflow&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-应用启动时报找不到一些so库&quot;&gt;&lt;a href=&quot;#2-应用启动时报找不到一些so库&quot; class=&quot;headerlink&quot; title=&quot;2.应用启动时报找不到一些so库&quot;&gt;&lt;/a&gt;2.应用启动时报找不到一些so库&lt;/h2&gt;&lt;h2 id=&quot;3-跳转至React-Native界面报：java-lang-UnsatisfiedLinkError-could-find-DSO-to-load-libreactnativejni-so&quot;&gt;&lt;a href=&quot;#3-跳转至React-Native界面报：java-lang-UnsatisfiedLinkError-could-find-DSO-to-load-libreactnativejni-so&quot; class=&quot;headerlink&quot; title=&quot;3.跳转至React Native界面报：java.lang.UnsatisfiedLinkError: could find DSO to load: libreactnativejni.so&quot;&gt;&lt;/a&gt;3.跳转至React Native界面报：java.lang.UnsatisfiedLinkError: could find DSO to load: libreactnativejni.so&lt;/h2&gt;&lt;p&gt;关于这个问题的一些描述：&lt;a href=&quot;https://github.com/facebook/react-native/issues/2814&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github上的&lt;/a&gt;，以及其它人的一些&lt;a href=&quot;https://corbt.com/posts/2015/09/18/mixing-32-and-64bit-dependencies-in-android.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;尝试&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;就目前资料看，这个问题不是所有应用都会遇到，这里结合手头上应用来分析。&lt;/p&gt;
&lt;p&gt;分析：在引入React Native的dependency之前，打出的apk的lib目录下只会有armeabi一个文件夹。引入之后，会多出来arm64-v8a,armeabi-v7a,x86,x86_64四个文件夹，其中只有armeabi-v7a和x86下包含libreactnativejni.so。  &lt;/p&gt;
&lt;p&gt;目前测试的设备都是armeabi-v7a的，在查找so时会优先去armeabi-v7a找，按Google的说法，如果一个so在armeabi-v7a中找不到会去armeabi中查找，但是实际情况并没有这样。引入React Native之后，系统在armeabi-v7a中找不到我们自己的一些so，且又并没有去armeabi下去查找，就造成错误2。  &lt;/p&gt;
&lt;p&gt;为解决错误2这里尝试在app中build.gradle文件中加入&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;android &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    defaultConfig &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ndk &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            abiFilters &amp;quot;armeabi&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;加入以上配置后，另外需要在项目的gradle.properties文件中加入&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;android.useDeprecatedNdk=true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当配置好上述两项之后，应用可以启动了，但是会出现3中的错误，这是因为这时候打出的apk中的lib目录下只有armeabi文件夹，而libreactnativejni.so并不在其中。  &lt;/p&gt;
&lt;p&gt;通过尝试其它几种配置后发现，ibreactnativejni.so只会出现在armeabi-v7a,x86下，而我们自己的so目前只会出现在armeabi中，而一旦apk中出现了armeabi-v7a，就不会去armeabi中查找so了。&lt;/p&gt;
&lt;p&gt;解决方法：将应用源码所有引入so文件的module中，都在src/jniLibs/下新建armeabi-v7a，然后将已有armeabi下的so文件都拷贝一份到armeabi-v7a下。这样暂时解决了问题，但是会使得apk体积变大，需要后续的优化。&lt;/p&gt;
&lt;h2 id=&quot;4-跳转至包含React-Native的界面后报：Android-java-lang-IllegalAccessError-Method-void-android-support-v4-net-ConnectivityManagerCompat&quot;&gt;&lt;a href=&quot;#4-跳转至包含React-Native的界面后报：Android-java-lang-IllegalAccessError-Method-void-android-support-v4-net-ConnectivityManagerCompat&quot; class=&quot;headerlink&quot; title=&quot;4.跳转至包含React Native的界面后报：Android java.lang.IllegalAccessError Method void android.support.v4.net.ConnectivityManagerCompat&quot;&gt;&lt;/a&gt;4.跳转至包含React Native的界面后报：Android java.lang.IllegalAccessError Method void android.support.v4.net.ConnectivityManagerCompat&lt;/h2&gt;&lt;p&gt;github上关于这个问题的&lt;a href=&quot;https://github.com/facebook/react-native/issues/6152&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;讨论&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;原因：support-v4版本冲突引起  &lt;/p&gt;
&lt;p&gt;解决办法：对于我们的工程，在应用主build.gradle中加入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;subprojects {
    configurations.all {
        resolutionStrategy {
            // https://github.com/facebook/react-native/issues/6152
            force &amp;apos;com.android.support:support-v4:23.0.1&amp;apos;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;问题暂时得到解决，但是并不完美，后面会继续寻找更好的方法，上面github链接中facebook的工作人员也给出了方案，待尝试。&lt;/p&gt;
&lt;h2 id=&quot;5-跳转至包含React-Native的界面后报：Can’t-find-variable-fbBatchedBridge&quot;&gt;&lt;a href=&quot;#5-跳转至包含React-Native的界面后报：Can’t-find-variable-fbBatchedBridge&quot; class=&quot;headerlink&quot; title=&quot;5.跳转至包含React Native的界面后报：Can’t find variable: __fbBatchedBridge&quot;&gt;&lt;/a&gt;5.跳转至包含React Native的界面后报：Can’t find variable: __fbBatchedBridge&lt;/h2&gt;&lt;p&gt;分析：造成这个异常的原因不止一种，通常的原因是开发环境没有按照&lt;a href=&quot;https://facebook.github.io/react-native/docs/running-on-device-ios.html#content&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方的文档&lt;/a&gt;来设置，解决办法见&lt;a href=&quot;https://github.com/facebook/react-native/issues/4881&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。  &lt;/p&gt;
&lt;p&gt;这里还要说下遇到的另一种情况，具体分析和解决办法见&lt;a href=&quot;http://blog.5ibc.net/p/48976.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;6-跳转至包含React-Native的界面后报：Attached-Dialog-Module-to-host-with-pending-alert-but-no-FragmentManager&quot;&gt;&lt;a href=&quot;#6-跳转至包含React-Native的界面后报：Attached-Dialog-Module-to-host-with-pending-alert-but-no-FragmentManager&quot; class=&quot;headerlink&quot; title=&quot;6.跳转至包含React Native的界面后报：Attached Dialog Module to host with pending alert but no FragmentManager&quot;&gt;&lt;/a&gt;6.跳转至包含React Native的界面后报：Attached Dialog Module to host with pending alert but no FragmentManager&lt;/h2&gt;&lt;p&gt;分析：没有处理好ReactInstanceManager的生命周期，注意无论是实用Activity还是Fragment都要严格参考&lt;a href=&quot;https://facebook.github.io/react-native/docs/embedded-app-android.html#content&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方的文档&lt;/a&gt;。  &lt;/p&gt;
&lt;p&gt;解决办法：见&lt;a href=&quot;http://stackoverflow.com/questions/35254232/react-native-maps-integration-issue-with-react-native-0-19-0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;目前仅集成就遇到这些问题，相信随着更深入的使用，会遇到更多问题，后面会再汇总一次。  &lt;/p&gt;
&lt;p&gt;顺便说句facebook在github上的支持比较及时，这点国内一些以kpi为导向的公司做的不是很好，经常开源出来就扔那不管了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-加入React-Native的dependency之后报：Attribute-“color”-has-already-been-defined&quot;&gt;&lt;a href=&quot;#1-加入React-Native的dependency之后报：Attribute-“color
    
    </summary>
    
    
      <category term="Android" scheme="https://jjding1986.github.io/tags/Android/"/>
    
      <category term="React Native" scheme="https://jjding1986.github.io/tags/React-Native/"/>
    
  </entry>
  
</feed>
